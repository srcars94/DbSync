using NUnit.Framework;

namespace Quoting.Shared.Extensions.Tests
{
    [TestFixture]
    public class StringExtensions_TidySeparatedList_Tests
    {
        [TestCase(null,                    ExpectedResult = "")]
        [TestCase("",                      ExpectedResult = "")]
        [TestCase("   ",                   ExpectedResult = "")]
        [TestCase("apple",                 ExpectedResult = "apple")]
        [TestCase("apple;banana",          ExpectedResult = "apple;banana")]
        [TestCase("apple,banana",          ExpectedResult = "apple;banana",  TestName = "Normalizes_Commas_To_Semicolons")]
        [TestCase(" apple ; banana ",      ExpectedResult = "apple;banana",  TestName = "Trims_Items")]
        [TestCase("apple;;banana",         ExpectedResult = "apple;banana",  TestName = "Removes_Empty_Items_DoubleSep")]
        [TestCase(";apple; ;banana;",      ExpectedResult = "apple;banana",  TestName = "Removes_Empty_Items_LeadingTrailing")]
        [TestCase("apple;banana;apple",    ExpectedResult = "apple;banana",  TestName = "Removes_Duplicates")]
        [TestCase("apple,,banana,,",       ExpectedResult = "apple;banana",  TestName = "Handles_Consecutive_Commas")]
        [TestCase("apple ,  banana , apple",ExpectedResult = "apple;banana", TestName = "Trims_And_Dedup_From_Commas")]
        [TestCase("orange;APPLE;apple",    ExpectedResult = "orange;APPLE;apple", TestName = "Distinct_Is_CaseSensitive")]
        public string TidySeparatedList_Works(string input)
            => input.TidySeparatedList();
    }
}