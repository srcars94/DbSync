using System;
using System.Globalization;
using System.Linq;

class Program
{
    static void Main()
    {
        Console.Write("Enter year (e.g., 2025): ");
        int year = int.Parse(Console.ReadLine());

        Console.Write("Enter month (1-12): ");
        int month = int.Parse(Console.ReadLine());

        Console.Write("How many holiday days are you taking in this month? ");
        int holidayDays = int.Parse(Console.ReadLine());

        Console.Write("How many sick days (optional, press Enter for 0): ");
        string sickInput = Console.ReadLine();
        int sickDays = string.IsNullOrWhiteSpace(sickInput) ? 0 : int.Parse(sickInput);

        var workingDays = GetWorkingDays(year, month);
        var bankHolidays = GetBankHolidays(year, month);

        int fullWorkDays = workingDays.Count - bankHolidays.Count;
        int actualWorkDays = fullWorkDays - holidayDays - sickDays;

        int requiredOfficeDays = (int)Math.Ceiling(8 * (actualWorkDays / (double)fullWorkDays));

        Console.WriteLine($"\nüìÖ Month: {CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(month)} {year}");
        Console.WriteLine($"üìÖ Total working days (excluding bank holidays): {fullWorkDays}");
        Console.WriteLine($"üèñÔ∏è Holidays taken: {holidayDays}");
        Console.WriteLine($"ü§í Sick days: {sickDays}");
        Console.WriteLine($"‚úÖ Effective working days: {actualWorkDays}");
        Console.WriteLine($"üè¢ Required in-office days: {requiredOfficeDays}");
    }

    static List<DateTime> GetWorkingDays(int year, int month)
    {
        return Enumerable.Range(1, DateTime.DaysInMonth(year, month))
            .Select(day => new DateTime(year, month, day))
            .Where(date => date.DayOfWeek != DayOfWeek.Saturday && date.DayOfWeek != DayOfWeek.Sunday)
            .ToList();
    }

    static List<DateTime> GetBankHolidays(int year, int month)
    {
        var bankHolidays = new List<DateTime>
        {
            new DateTime(year, 1, 1),    // New Year's Day
            new DateTime(year, 4, 18),   // Good Friday
            new DateTime(year, 4, 21),   // Easter Monday
            new DateTime(year, 5, 5),    // Early May BH
            new DateTime(year, 5, 26),   // Spring BH
            new DateTime(year, 8, 25),   // Summer BH
            new DateTime(year, 12, 25),  // Christmas
            new DateTime(year, 12, 26)   // Boxing Day
        };

        return bankHolidays.Where(d => d.Month == month).ToList();
    }
}